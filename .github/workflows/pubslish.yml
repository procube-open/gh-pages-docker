name: Publish Container Image

on:
  push:
    branches:
      - "main"

permissions:
  contents: write

jobs:
  publish:
    name: Publish Container Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Get version to be released
        id: get-version
        run: node -e "console.log('version=' + require('./package.json').version)" >> "$GITHUB_OUTPUT"
      - name: Get package name
        id: get-name
        run: node -e "console.log('name=' + require('./package.json').name)" >> "$GITHUB_OUTPUT"
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Check if the image for the version is already pushed
        id: tag-exists
        run: |
          if docker manifest inspect ${PACKAGE_NAME}:${PACKAGE_VERSION} > /dev/null 2>&1;   then
            echo "Docker tag exists"
            echo "tag_exists=1" >> "$GITHUB_OUTPUT"
          else
            echo "Docker tag does not exist"
            echo "tag_exists=0" >> "$GITHUB_OUTPUT"
          fi
        env:
          PACKAGE_NAME: ${{ steps.get-name.outputs.name }}
          PACKAGE_VERSION: ${{ steps.get-version.outputs.version }}
      - name: Error if the image for the version is already pushed
        if: ${{steps.tag-exists.outputs.tag_exists == 1}}
        run: |
          echo "::error::The image for the version ${{ steps.get-version.outputs.version }} is already pushed, so skip rest steps."
      - name: Add Tag
        if: >-
          ${{ steps.tag-exists.outputs.tag_exists == 0 }}
        run: |
          git tag v${VERSION}
          git push --tags origin v${VERSION}
        env:
          VERSION: ${{ steps.get-version.outputs.version }}
      - name: Extract metadata (tags, labels) for Docker
        if: >-
          ${{steps.tag-exists.outputs.tag_exists == 0}}
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: "${{ steps.get-name.outputs.name }}"
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{ version }},value=${{ steps.get-version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.get-version.outputs.version }}
            type=semver,pattern={{major}},value=${{ steps.get-version.outputs.version }}
            type=raw,value=latest
      - name: Build and push Docker image
        if: >-
          ${{ steps.tag-exists.outputs.tag_exists == 0}}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
